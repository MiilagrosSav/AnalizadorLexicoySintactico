
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARREGLO ASIGNACION COMA CORCHETEDER CORCHETEIZQ DIFERENTE DOSPUNTOS ENTERO FIN FUNCION I IGUAL INICIAR J LONGITUD MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MIARREGLO MOSTRAR NUM0 NUM1 NUM2 NUM3 NUM4 NUM5 ORDENAMIENTO ORDENAR PARDER PARIZQ PROGRAMA PUNTOYCOMA REPETIR SI TAMANO TEMP VECTORprograma : PROGRAMA ORDENAMIENTO PUNTOYCOMA funcion INICIAR bloque FINfuncion : FUNCION ORDENAR PARIZQ parametro PARDER declaraciones cuerpo_funcionparametro : VECTOR ARREGLOdeclaraciones : ENTERO I PUNTOYCOMA\n| ENTERO J PUNTOYCOMA\n| ENTERO TEMP PUNTOYCOMA\n| declaracion_tamano\n| declaraciones ENTERO I PUNTOYCOMA\n| declaraciones ENTERO J PUNTOYCOMA\n| declaraciones ENTERO TEMP PUNTOYCOMA\n| declaraciones declaracion_tamanodeclaracion_tamano : ENTERO TAMANO ASIGNACION LONGITUD PARIZQ ARREGLO PARDER PUNTOYCOMAcuerpo_funcion : bucle_principal mostrar_arreglo FINmostrar_arreglo : MOSTRAR PARIZQ ARREGLO PARDER PUNTOYCOMAbucle_principal : REPETIR PARIZQ inicializacion condicion incremento PARDER bucle_secundarioinicializacion : I ASIGNACION NUM0 PUNTOYCOMAcondicion : I MENOR TAMANO MENOS NUM1 PUNTOYCOMAincremento : I ASIGNACION I MAS NUM1bucle_secundario : REPETIR PARIZQ init_j cond_j inc_j PARDER bloque_siinit_j : J ASIGNACION NUM0 PUNTOYCOMAcond_j : J MENOR TAMANO MENOS I MENOS NUM1 PUNTOYCOMAinc_j : J ASIGNACION J MAS NUM1bloque_si : SI PARIZQ condicion_arreglos PARDER bloque_intercambio FIN FIN FINcondicion_arreglos : acceso_arreglo MAYOR acceso_arreglo_siguienteacceso_arreglo : ARREGLO CORCHETEIZQ J CORCHETEDERacceso_arreglo_siguiente : ARREGLO CORCHETEIZQ J MAS NUM1 CORCHETEDERbloque_intercambio : asignacion_temp asignacion_arr1 asignacion_arr2asignacion_temp : TEMP ASIGNACION acceso_arreglo PUNTOYCOMAasignacion_arr1 : acceso_arreglo ASIGNACION acceso_arreglo_siguiente PUNTOYCOMAasignacion_arr2 : acceso_arreglo_siguiente ASIGNACION TEMP PUNTOYCOMAbloque : declaracion_arreglo llamada_ordenardeclaracion_arreglo : VECTOR MIARREGLO ASIGNACION CORCHETEIZQ NUM5 COMA NUM3 COMA NUM2 COMA NUM4 COMA NUM1 CORCHETEDER PUNTOYCOMAllamada_ordenar : ORDENAR PARIZQ MIARREGLO PARDER PUNTOYCOMA'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,13,],[0,-1,]),'ORDENAMIENTO':([2,],[3,]),'PUNTOYCOMA':([3,28,35,36,37,41,42,43,67,71,79,89,95,103,123,136,141,145,148,152,],[4,39,47,48,49,52,53,54,74,78,85,94,99,107,130,-25,146,149,151,-26,]),'FUNCION':([4,],[6,]),'INICIAR':([5,30,55,],[7,-2,-13,]),'ORDENAR':([6,10,99,],[8,15,-32,]),'VECTOR':([7,12,],[11,18,]),'PARIZQ':([8,15,34,45,59,81,109,],[12,19,46,56,65,87,112,]),'FIN':([9,14,39,44,74,124,131,137,138,151,],[13,-31,-33,55,-14,131,137,143,-27,-30,]),'MIARREGLO':([11,19,],[16,23,]),'ASIGNACION':([16,38,58,69,92,101,126,133,136,139,152,],[20,50,64,76,98,105,134,140,-25,144,-26,]),'PARDER':([17,22,23,61,68,72,93,100,115,118,127,152,],[21,-3,28,67,75,79,-18,104,120,-22,-24,-26,]),'ARREGLO':([18,56,65,112,121,125,132,134,140,146,149,],[22,61,72,117,128,117,128,117,128,-28,-29,]),'CORCHETEIZQ':([20,117,128,],[24,122,135,]),'ENTERO':([21,25,27,32,47,48,49,52,53,54,85,],[26,31,-7,-11,-4,-5,-6,-8,-9,-10,-12,]),'NUM5':([24,],[29,]),'REPETIR':([25,27,32,47,48,49,52,53,54,75,85,],[34,-7,-11,-4,-5,-6,-8,-9,-10,81,-12,]),'I':([26,31,46,57,62,76,78,94,111,],[35,41,58,63,69,83,-16,-17,114,]),'J':([26,31,87,91,96,105,107,122,130,135,],[36,42,92,97,101,110,-20,129,-21,142,]),'TEMP':([26,31,120,144,],[37,43,126,148,]),'TAMANO':([26,31,70,102,],[38,38,77,106,]),'COMA':([29,51,66,80,],[40,60,73,86,]),'MOSTRAR':([33,82,108,143,],[45,-15,-19,-23,]),'NUM3':([40,],[51,]),'LONGITUD':([50,],[59,]),'NUM2':([60,],[66,]),'MENOR':([63,97,],[70,102,]),'NUM0':([64,98,],[71,103,]),'NUM4':([73,],[80,]),'MENOS':([77,106,114,],[84,111,119,]),'MAS':([83,110,142,],[88,113,147,]),'NUM1':([84,86,88,113,119,147,],[89,90,93,118,123,150,]),'CORCHETEDER':([90,129,150,],[95,136,152,]),'SI':([104,],[109,]),'MAYOR':([116,136,],[121,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funcion':([4,],[5,]),'bloque':([7,],[9,]),'declaracion_arreglo':([7,],[10,]),'llamada_ordenar':([10,],[14,]),'parametro':([12,],[17,]),'declaraciones':([21,],[25,]),'declaracion_tamano':([21,25,],[27,32,]),'cuerpo_funcion':([25,],[30,]),'bucle_principal':([25,],[33,]),'mostrar_arreglo':([33,],[44,]),'inicializacion':([46,],[57,]),'condicion':([57,],[62,]),'incremento':([62,],[68,]),'bucle_secundario':([75,],[82,]),'init_j':([87,],[91,]),'cond_j':([91,],[96,]),'inc_j':([96,],[100,]),'bloque_si':([104,],[108,]),'condicion_arreglos':([112,],[115,]),'acceso_arreglo':([112,125,134,],[116,133,141,]),'bloque_intercambio':([120,],[124,]),'asignacion_temp':([120,],[125,]),'acceso_arreglo_siguiente':([121,132,140,],[127,139,145,]),'asignacion_arr1':([125,],[132,]),'asignacion_arr2':([132,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ORDENAMIENTO PUNTOYCOMA funcion INICIAR bloque FIN','programa',7,'p_programa','parser.py',7),
  ('funcion -> FUNCION ORDENAR PARIZQ parametro PARDER declaraciones cuerpo_funcion','funcion',7,'p_funcion','parser.py',11),
  ('parametro -> VECTOR ARREGLO','parametro',2,'p_parametro','parser.py',15),
  ('declaraciones -> ENTERO I PUNTOYCOMA','declaraciones',3,'p_declaraciones','parser.py',19),
  ('declaraciones -> ENTERO J PUNTOYCOMA','declaraciones',3,'p_declaraciones','parser.py',20),
  ('declaraciones -> ENTERO TEMP PUNTOYCOMA','declaraciones',3,'p_declaraciones','parser.py',21),
  ('declaraciones -> declaracion_tamano','declaraciones',1,'p_declaraciones','parser.py',22),
  ('declaraciones -> declaraciones ENTERO I PUNTOYCOMA','declaraciones',4,'p_declaraciones','parser.py',23),
  ('declaraciones -> declaraciones ENTERO J PUNTOYCOMA','declaraciones',4,'p_declaraciones','parser.py',24),
  ('declaraciones -> declaraciones ENTERO TEMP PUNTOYCOMA','declaraciones',4,'p_declaraciones','parser.py',25),
  ('declaraciones -> declaraciones declaracion_tamano','declaraciones',2,'p_declaraciones','parser.py',26),
  ('declaracion_tamano -> ENTERO TAMANO ASIGNACION LONGITUD PARIZQ ARREGLO PARDER PUNTOYCOMA','declaracion_tamano',8,'p_declaracion_tamano','parser.py',30),
  ('cuerpo_funcion -> bucle_principal mostrar_arreglo FIN','cuerpo_funcion',3,'p_cuerpo_funcion','parser.py',34),
  ('mostrar_arreglo -> MOSTRAR PARIZQ ARREGLO PARDER PUNTOYCOMA','mostrar_arreglo',5,'p_mostrar_arreglo','parser.py',38),
  ('bucle_principal -> REPETIR PARIZQ inicializacion condicion incremento PARDER bucle_secundario','bucle_principal',7,'p_bucle_principal','parser.py',42),
  ('inicializacion -> I ASIGNACION NUM0 PUNTOYCOMA','inicializacion',4,'p_inicializacion','parser.py',46),
  ('condicion -> I MENOR TAMANO MENOS NUM1 PUNTOYCOMA','condicion',6,'p_condicion','parser.py',50),
  ('incremento -> I ASIGNACION I MAS NUM1','incremento',5,'p_incremento','parser.py',54),
  ('bucle_secundario -> REPETIR PARIZQ init_j cond_j inc_j PARDER bloque_si','bucle_secundario',7,'p_bucle_secundario','parser.py',58),
  ('init_j -> J ASIGNACION NUM0 PUNTOYCOMA','init_j',4,'p_init_j','parser.py',62),
  ('cond_j -> J MENOR TAMANO MENOS I MENOS NUM1 PUNTOYCOMA','cond_j',8,'p_cond_j','parser.py',66),
  ('inc_j -> J ASIGNACION J MAS NUM1','inc_j',5,'p_inc_j','parser.py',70),
  ('bloque_si -> SI PARIZQ condicion_arreglos PARDER bloque_intercambio FIN FIN FIN','bloque_si',8,'p_bloque_si','parser.py',74),
  ('condicion_arreglos -> acceso_arreglo MAYOR acceso_arreglo_siguiente','condicion_arreglos',3,'p_condicion_arreglos','parser.py',78),
  ('acceso_arreglo -> ARREGLO CORCHETEIZQ J CORCHETEDER','acceso_arreglo',4,'p_acceso_arreglo','parser.py',82),
  ('acceso_arreglo_siguiente -> ARREGLO CORCHETEIZQ J MAS NUM1 CORCHETEDER','acceso_arreglo_siguiente',6,'p_acceso_arreglo_siguiente','parser.py',86),
  ('bloque_intercambio -> asignacion_temp asignacion_arr1 asignacion_arr2','bloque_intercambio',3,'p_bloque_intercambio','parser.py',90),
  ('asignacion_temp -> TEMP ASIGNACION acceso_arreglo PUNTOYCOMA','asignacion_temp',4,'p_asignacion_temp','parser.py',94),
  ('asignacion_arr1 -> acceso_arreglo ASIGNACION acceso_arreglo_siguiente PUNTOYCOMA','asignacion_arr1',4,'p_asignacion_arr1','parser.py',98),
  ('asignacion_arr2 -> acceso_arreglo_siguiente ASIGNACION TEMP PUNTOYCOMA','asignacion_arr2',4,'p_asignacion_arr2','parser.py',102),
  ('bloque -> declaracion_arreglo llamada_ordenar','bloque',2,'p_bloque','parser.py',106),
  ('declaracion_arreglo -> VECTOR MIARREGLO ASIGNACION CORCHETEIZQ NUM5 COMA NUM3 COMA NUM2 COMA NUM4 COMA NUM1 CORCHETEDER PUNTOYCOMA','declaracion_arreglo',15,'p_declaracion_arreglo','parser.py',110),
  ('llamada_ordenar -> ORDENAR PARIZQ MIARREGLO PARDER PUNTOYCOMA','llamada_ordenar',5,'p_llamada_ordenar','parser.py',114),
]
